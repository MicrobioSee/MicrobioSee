D <- pmApiRequest(query = query, limit = 10, api_key = api_key)
M <- pmApi2df(D,format = "raw")
View(M)
get_ab <- function(API,keyword)
{api_key <- API
query <- paste0(keyword,"[Title/Abstract] AND english[LA] AND Journal Article[PT] AND 2000:2020[DP]")
D <- pmApiRequest(query = query, limit = 10, api_key = api_key)
M <- pmApi2df(D,format = "raw")
print(M$TI)
print(M$AB)}
get_ab("6d39f3480ac1537f32e093bd23fd9988c208","Bioinformatics")
get_ab("6d39f3480ac1537f32e093bd23fd9988c208","LncRNAs")
get_ab <- function(API,keyword)
{api_key <- API
query <- paste0(keyword,"[Title/Abstract] AND english[LA] AND Journal Article[PT] AND 2000:2020[DP]")
D <- pmApiRequest(query = query, limit = 10, api_key = api_key)
M <- pmApi2df(D,format = "raw")
a <- list(M$TI,M$AB)
print(a)
}
get_ab("6d39f3480ac1537f32e093bd23fd9988c208","LncRNAs")
D <- pmApiRequest(query = query, limit = 10, api_key = api_key)
get_ab <- function(API,keyword)
{api_key <- API
query <- paste0(keyword,"[Title/Abstract] AND english[LA] AND Journal Article[PT] AND 2000:2020[DP]")
D <- pmApiRequest(query = query, limit = 10, api_key = api_key)
M <- pmApi2df(D,format = "raw")
a <- list(M$TI,M$AB)
print(a)
}
get_ab("6d39f3480ac1537f32e093bd23fd9988c208","Bioinformatics")
rm(list = ls())
library(pubmedR)
library(PubMedWordcloud)
library(wordcloud2)
library(stringr)
rm(list = ls())
getres <- function(API,keyword){
api_key <- API
query <- paste0(keyword,"[Title/Abstract] AND english[LA] AND Journal Article[PT] AND 2000:2020[DP]")
res <- pmQueryTotalCount(query = query, api_key = api_key)
print(res$total_count)
}
api_key <- "6d39f3480ac1537f32e093bd23fd9988c208"
query <- "cell*[Title/Abstract] AND english[LA] AND Journal Article[PT] AND 2000:2020[DP]"
D <- pmApiRequest(query = query, limit = 10, api_key = api_key)
D <- pmApiRequest(query = query, limit = 10, api_key = api_key)
D <- pmApiRequest(query = query, limit = 10, api_key = api_key)
M <- pmApi2df(D,format = "raw")
a <- list(M$TI,M$AB)
print(a)
get_ab <- function(API,keyword)
{api_key <- API
query <- paste0(keyword,"*[Title/Abstract] AND english[LA] AND Journal Article[PT] AND 2000:2020[DP]")
D <- pmApiRequest(query = query, limit = 10, api_key = api_key)
M <- pmApi2df(D,format = "raw")
a <- list(M$TI,M$AB)
print(a)
}
get_ab(api_key,keyword = keyword)
get_ab(api_key,keyword = "cell")
print(Encoding(a) <- "utf-8")
get_ab <- function(API,keyword)
{api_key <- API
query <- paste0(keyword,"*[Title/Abstract] AND english[LA] AND Journal Article[PT] AND 2000:2020[DP]")
D <- pmApiRequest(query = query, limit = 10, api_key = api_key)
M <- pmApi2df(D,format = "raw")
a <- list(M$TI,M$AB)
Encoding(a)<-'UTF-8'
print(a)
}
get_ab(api_key,keyword = "cell")
Encoding(a)<-'UTF-8'
Encoding(a)<-'UTF-8'
print(a)
Encoding(a)<-'UTF-8'
enc2utf8(a)
Encoding(a)<-'UTF-8'
as.character(a)
Encoding(as.character(a))<-'UTF-8'
as.character(a)
Encoding(a[2])<-'UTF-8'
a[2]
a[10]
a(0)
a(2)
a[2]
get_ab <- function(API,keyword)
{api_key <- API
query <- paste0(keyword,"*[Title/Abstract] AND english[LA] AND Journal Article[PT] AND 2000:2020[DP]")
D <- pmApiRequest(query = query, limit = 10, api_key = api_key)
M <- pmApi2df(D,format = "raw")
text <- M$AB
a <- ""
for (i in 1:80){
a <- paste(a,text[i],sep = " ")
}
Encoding(a)<-'UTF-8'
print(a)
}
get_ab(api_key,keyword = "cell")
D <- pmApiRequest(query = query, limit = 10, api_key = api_key)
M <- pmApi2df(D,format = "raw")
text <- M$AB
a <- ""
for (i in 1:80){
a <- paste(a,text[i],sep = " ")
}
Encoding(a)<-'UTF-8'
print(a)
query <- "sex*[Title/Abstract] AND english[LA] AND Journal Article[PT] AND 2000:2020[DP]"
D <- pmApiRequest(query = query, limit = 10, api_key = api_key)
M <- pmApi2df(D,format = "raw")
text <- M$AB
a <- ""
for (i in 1:80){
a <- paste(a,text[i],sep = " ")
}
Encoding(a)<-'UTF-8'
print(a)
text
a <- ""
for (i in 1:10){
a <- paste(a,text[i],sep = " ")
}
Encoding(a)<-'UTF-8'
print(a)
get_ab <- function(API,keyword)
{api_key <- API
query <- paste0(keyword,"*[Title/Abstract] AND english[LA] AND Journal Article[PT] AND 2000:2020[DP]")
D <- pmApiRequest(query = query, limit = 10, api_key = api_key)
M <- pmApi2df(D,format = "raw")
text <- M$AB
a <- ""
for (i in 1:10){
a <- paste(a,text[i],sep = " ")
}
Encoding(a)<-'UTF-8'
print(a)
}
get_ab(keyword = query,API = api_key)
get_ab <- function(API,keyword)
{api_key <- API
query <- paste0(keyword,"*[Title/Abstract] AND english[LA] AND Journal Article[PT] AND 2000:2020[DP]")
D <- pmApiRequest(query = query, limit = 10, api_key = api_key)
M <- pmApi2df(D,format = "raw")
text <- M$AB
a <- ""
for (i in 1:10){
a <- paste(a,text[i],sep = "$")
}
Encoding(a)<-'UTF-8'
print(a)
}
get_ab(keyword = query,API = api_key)
get_ab <- function(API,keyword)
{api_key <- API
query <- paste0(keyword,"*[Title/Abstract] AND english[LA] AND Journal Article[PT] AND 2000:2020[DP]")
D <- pmApiRequest(query = query, limit = 10, api_key = api_key)
M <- pmApi2df(D,format = "raw")
text <- M$AB
a <- ""
for (i in 1:10){
a <- paste(a,text[i],sep = "   $   ")
}
Encoding(a)<-'UTF-8'
print(a)
}
get_ab(keyword = query,API = api_key)
strsplit(x = a,split = "   $   ")
strsplit(a,"   $   ")
s <- '123 456'
strsplit(s,'')
strsplit(s, ' ')
get_ab <- function(API,keyword)
{api_key <- API
query <- paste0(keyword,"*[Title/Abstract] AND english[LA] AND Journal Article[PT] AND 2000:2020[DP]")
D <- pmApiRequest(query = query, limit = 10, api_key = api_key)
M <- pmApi2df(D,format = "raw")
text <- M$AB
a <- ""
for (i in 1:10){
a <- paste(a,text[i],sep = "$")
}
Encoding(a)<-'UTF-8'
print(a)
}
get_ab(api_key,query)
a <- get_ab(api_key,query)
rm(list = ls())
getres <- function(API,keyword){
api_key <- API
query <- paste0(keyword,"[Title/Abstract] AND english[LA] AND Journal Article[PT] AND 2000:2020[DP]")
res <- pmQueryTotalCount(query = query, api_key = api_key)
print(res$total_count)
}
get_ab <- function(API,keyword)
{api_key <- API
query <- paste0(keyword,"*[Title/Abstract] AND english[LA] AND Journal Article[PT] AND 2000:2020[DP]")
D <- pmApiRequest(query = query, limit = 10, api_key = api_key)
M <- pmApi2df(D,format = "raw")
text <- M$AB
a <- ""
for (i in 1:10){
a <- paste(a,text[i],sep = "$")
}
Encoding(a)<-'UTF-8'
print(a)
}
get_ab(API = "6d39f3480ac1537f32e093bd23fd9988c208",keyword = "cell")
a
a <- get_ab(API = "6d39f3480ac1537f32e093bd23fd9988c208",keyword = "cell")
a
strsplit(a,"$")
runApp('pubmed')
?jscolorInput
??jscolorInput
install.packages("RLumShiny")
library(RLumShiny)
runApp('pubmed')
runApp()
runApp('pubmed')
runApp()
runApp('pubmed')
runApp('pubmed')
?bsButton
query <- paste0(keyword,"*[Title/Abstract] AND english[LA] AND Journal Article[PT] AND 2000:2020[DP]")
get_ab <- function(API,keyword,papnum)
{api_key <- API
query <- paste0(keyword,"*[Title/Abstract] AND english[LA] AND Journal Article[PT] AND 2000:2020[DP]")
D <- pmApiRequest(query = query, limit = papnum, api_key = api_key)
M <- pmApi2df(D,format = "raw")
text <- M$AB
a <- ""
for (i in 1:papnum){
a <- paste(a,text[i],sep = "$")
}
Encoding(a)<-'UTF-8'
print(a)
}
get_ab("6d39f3480ac1537f32e093bd23fd9988c208","Bioinformatics",20)
get_ab("6d39f3480ac1537f32e093bd23fd9988c208","cell",40)
a<- get_ab("6d39f3480ac1537f32e093bd23fd9988c208","cell",40)
a<- get_ab("6d39f3480ac1537f32e093bd23fd9988c208","cell",40)
text
get_ab <- function(API,keyword,papnum)
{api_key <- API
query <- paste0(keyword,"*[Title/Abstract] AND english[LA] AND Journal Article[PT] AND 2000:2020[DP]")
D <- pmApiRequest(query = query, limit = papnum, api_key = api_key)
M <- pmApi2df(D,format = "raw")
text <- M$AB
a <- ""
for (i in 1:papnum){
a <- paste(a,text[i],sep = "$")
}
Encoding(a)<-'UTF-8'
print(text)
}
get_ab <- function(API,keyword,papnum){
api_key <- API
query <- paste0(keyword,"*[Title/Abstract] AND english[LA] AND Journal Article[PT] AND 2000:2020[DP]")
D <- pmApiRequest(query = query, limit = papnum, api_key = api_key)
M <- pmApi2df(D,format = "raw")
text <- M$AB
a <- ""
for (i in 1:papnum){
print(Encoding(paste0(text[i],"\n")) <- 'UTF-8')
a <- paste(a,text[i],sep = "$")
}
Encoding(a)<-'UTF-8'
# print(text)
}
get_ab("6d39f3480ac1537f32e093bd23fd9988c208","cell",40)
get_ab <- function(API,keyword,papnum){
api_key <- API
query <- paste0(keyword,"*[Title/Abstract] AND english[LA] AND Journal Article[PT] AND 2000:2020[DP]")
D <- pmApiRequest(query = query, limit = papnum, api_key = api_key)
M <- pmApi2df(D,format = "raw")
text <- M$AB
a <- ""
for (i in 1:papnum){
print(paste0(text[i],"\n"))
a <- paste(a,text[i],sep = "$")
}
Encoding(a)<-'UTF-8'
# print(text)
}
get_ab <- function(API,keyword,papnum){
api_key <- API
query <- paste0(keyword,"*[Title/Abstract] AND english[LA] AND Journal Article[PT] AND 2000:2020[DP]")
D <- pmApiRequest(query = query, limit = papnum, api_key = api_key)
M <- pmApi2df(D,format = "raw")
text <- M$AB
a <- ""
for (i in 1:papnum){
print(paste0(text[i],"\n"))
a <- paste(a,text[i],sep = "$")
}
Encoding(a)<-'UTF-8'
# print(text)
}
get_ab("6d39f3480ac1537f32e093bd23fd9988c208","cell",40)
get_ab <- function(API,keyword,papnum){
api_key <- API
query <- paste0(keyword,"*[Title/Abstract] AND english[LA] AND Journal Article[PT] AND 2000:2020[DP]")
D <- pmApiRequest(query = query, limit = papnum, api_key = api_key)
M <- pmApi2df(D,format = "raw")
text <- M$AB
a <- ""
for (i in 1:papnum){
print(paste0(Encoding(text[i])<-"UTF-8","\n"))
a <- paste(a,text[i],sep = "$")
}
Encoding(a)<-'UTF-8'
# print(text)
}
get_ab("6d39f3480ac1537f32e093bd23fd9988c208","cell",40)
get_ab <- function(API,keyword,papnum){
api_key <- API
query <- paste0(keyword,"*[Title/Abstract] AND english[LA] AND Journal Article[PT] AND 2000:2020[DP]")
D <- pmApiRequest(query = query, limit = papnum, api_key = api_key)
M <- pmApi2df(D,format = "raw")
text <- M$AB
a <- ""
for (i in 1:papnum){
print(paste0(Encoding(text[i])<-'UTF-8',"\n"))
a <- paste(a,text[i],sep = "$")
}
Encoding(a)<-'UTF-8'
# print(text)
}
get_ab("6d39f3480ac1537f32e093bd23fd9988c208","cell",40)
get_ab <- function(API,keyword,papnum){
api_key <- API
query <- paste0(keyword,"*[Title/Abstract] AND english[LA] AND Journal Article[PT] AND 2000:2020[DP]")
D <- pmApiRequest(query = query, limit = papnum, api_key = api_key)
M <- pmApi2df(D,format = "raw")
text <- M$AB
a <- ""
b <- ""
for (i in 1:papnum){
Encoding(text[i])<-'UTF-8'
b <- text[i]
print(paste0(b,"\n"))
a <- paste(a,text[i],sep = "$")
}
Encoding(a)<-'UTF-8'
# print(text)
}
get_ab("6d39f3480ac1537f32e093bd23fd9988c208","cell",40)
system("sir")
system("dir")
runApp('pubmed')
??jscolorInput
getres <- function(API,keyword){
api_key <- API
query <- paste0(keyword,"[Title/Abstract] AND english[LA] AND Journal Article[PT] AND 2000:2020[DP]")
res <- pmQueryTotalCount(query = query, api_key = api_key)
print(res$total_count)
}
get_all <- function(API,keyword){
api_key <- API
query <- paste0(keyword,"*[Title/Abstract] AND english[LA] AND Journal Article[PT] AND 2000:2020[DP]")
D <- pmApiRequest(query = query, limit = papnum, api_key = api_key)
M <- pmApi2df(D,format = "raw")
}
get_all("6d39f3480ac1537f32e093bd23fd9988c208","Bioinformatics")
get_all("6d39f3480ac1537f32e093bd23fd9988c208","Bioinformatics",20)
get_all <- function(API,keyword,papnum){
api_key <- API
query <- paste0(keyword,"*[Title/Abstract] AND english[LA] AND Journal Article[PT] AND 2000:2020[DP]")
D <- pmApiRequest(query = query, limit = 20, api_key = api_key)
M <- pmApi2df(D,format = "raw")
}
get_all("6d39f3480ac1537f32e093bd23fd9988c208","Bioinformatics")
M
get_all <- function(API,keyword,papnum){
api_key <- API
query <- paste0(keyword,"*[Title/Abstract] AND english[LA] AND Journal Article[PT] AND 2000:2020[DP]")
D <- pmApiRequest(query = query, limit = 20, api_key = api_key)
M <- pmApi2df(D,format = "raw")
return(M)
}
get_all("6d39f3480ac1537f32e093bd23fd9988c208","Bioinformatics")
get_all <- function(API,keyword){
api_key <- API
query <- paste0(keyword,"*[Title/Abstract] AND english[LA] AND Journal Article[PT] AND 2000:2020[DP]")
D <- pmApiRequest(query = query, limit = 20, api_key = api_key)
M <- pmApi2df(D,format = "raw")
return(M)
}
M <- get_all("6d39f3480ac1537f32e093bd23fd9988c208","Bioinformatics")
View(M)
get_all <- function(API,keyword){
api_key <- API
query <- paste0(keyword,"*[Title/Abstract] AND english[LA] AND Journal Article[PT] AND 2000:2020[DP]")
D <- pmApiRequest(query = query, limit = 400, api_key = api_key)
M <- pmApi2df(D,format = "raw")
return(M)
}
M <- get_all("6d39f3480ac1537f32e093bd23fd9988c208","Bioinformatics")
View(M)
get_ab <- function(M,papnum){
text <- M$AB
a <- ""
b <- ""
for (i in 1:papnum){
Encoding(text[i])<-'UTF-8'
b <- text[i]
print(paste0(b,"\n"))
a <- paste(a,text[i],sep = "$")
}
Encoding(a)<-'UTF-8'
return(text)
}
get_ab(M,20)
View(M)
View(M)
get_res <- function(API,keyword){
api_key <- API
query <- paste0(keyword,"[Title/Abstract] AND english[LA] AND Journal Article[PT] AND 2000:2020[DP]")
res <- pmQueryTotalCount(query = query, api_key = api_key)
print(res$total_count)
}
get_res("6d39f3480ac1537f32e093bd23fd9988c208","RNA")
setwd("~/box_plot/")
rm(list = ls())
runApp('~/shinny/shiny_box')
runApp('~/shinny/shiny_box')
source("~/shinny/shiny_box")
setwd("~/shinny/shiny_box")
source("box_plotzs.R")
runApp()
runApp('~/shinny/new')
runApp()
get_ab <- function(M,papnum){
text <- M$AB
a <- ""
b <- ""
for (i in 1:papnum){
Encoding(text[i])<-'UTF-8'
b <- text[i]
print(paste0(b,"\n"))
a <- paste(a,text[i],sep = "$")
}
Encoding(a)<-'UTF-8'
return(a,b)
}
get_res("6d39f3480ac1537f32e093bd23fd9988c208","RNA")
library(pubmedR)
library(PubMedWordcloud)
library(wordcloud2)
library(stringr)
library(pubmedR)
library(PubMedWordcloud)
library(wordcloud2)
library(stringr)
rm(list = ls())
get_res <- function(API,keyword){
api_key <- API
query <- paste0(keyword,"[Title/Abstract] AND english[LA] AND Journal Article[PT] AND 2000:2020[DP]")
res <- pmQueryTotalCount(query = query, api_key = api_key)
print(res$total_count)
}
get_all <- function(API,keyword){
api_key <- API
query <- paste0(keyword,"*[Title/Abstract] AND english[LA] AND Journal Article[PT] AND 2000:2020[DP]")
D <- pmApiRequest(query = query, limit = 400, api_key = api_key)
M <- pmApi2df(D,format = "raw")
return(M)
}
get_ab <- function(M,papnum){
text <- M$AB
a <- ""
b <- ""
for (i in 1:papnum){
Encoding(text[i])<-'UTF-8'
b <- text[i]
print(paste0(b,"\n"))
a <- paste(a,text[i],sep = "$")
}
Encoding(a)<-'UTF-8'
return(a,b)
}
get_res("6d39f3480ac1537f32e093bd23fd9988c208","RNA")
M <- get_all("6d39f3480ac1537f32e093bd23fd9988c208","RNA")
get_ab(M,20)
get_ab(M,20)
get_ab(M,20)
get_ab <- function(M,papnum){
text <- M$AB
a <- ""
b <- ""
for (i in 1:papnum){
Encoding(text[i])<-'UTF-8'
b <- text[i]
}
return(b)
}
get_ab(M,20)
library(webshot)
library(htmlwidgets)
get_worldcloud <- function(str){
cleanD=cleanAbstracts(str)
wordcloud2(data = cleanD)
}
get_res("6d39f3480ac1537f32e093bd23fd9988c208","RNA")
M <- get_all("6d39f3480ac1537f32e093bd23fd9988c208","RNA")
ab <- get_ab(M,20)
my_graph <- get_worldcloud(ab)
View(my_graph)
getwd()
